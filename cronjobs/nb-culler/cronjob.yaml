kind: CronJob
apiVersion: batch/v1
metadata:
  name: nb-culler
  labels:
    component.opendatahub.io/name: nb-culler
    opendatahub.io/component: 'true'
    opendatahub.io/modified: 'false'
spec:
  schedule: '0 * * * *'
  startingDeadlineSeconds: 200
  concurrencyPolicy: Replace
  suspend: false
  jobTemplate:
    metadata:
      labels:
        component.opendatahub.io/name: nb-culler
        opendatahub.io/component: 'true'
    spec:
      template:
        metadata:
          labels:
            component.opendatahub.io/name: nb-culler
            opendatahub.io/component: 'true'
            parent: nb-culler
        spec:
          restartPolicy: Never
          serviceAccountName: nb-culler
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
          securityContext: {}
          containers:
            - name: oc-cli
              image: >-
                registry.redhat.io/openshift4/ose-cli@sha256:25fef269ac6e7491cb8340119a9b473acbeb53bc6970ad029fdaae59c3d0ca61
              command: ["/bin/bash", "-c", "--"]
              args:
              - |
                  notebooks=$(oc get notebooks -n rhods-notebooks -o jsonpath="{range .items[?(@.status.containerState.running)]}{.metadata.name}{' '}{.metadata.namespace}{' '}{.status.containerState.running.startedAt}{' '}{.metadata.annotations['opendatahub\.io/username']}{' '}{.metadata.annotations['notebooks\.opendatahub\.io/last-image-selection']}{' '}{.metadata.annotations['notebooks\.opendatahub\.io/last-size-selection']}{'\n'}{end}")
                  if [ -z "$notebooks" ]; then
                      echo "No running notebooks found"
                      exit 0
                  fi
                  group_members_1=$(oc get group $GROUP_NAME_1 -o=jsonpath='{.users[*]}')
                  group_members_2=$(oc get group $GROUP_NAME_2 -o=jsonpath='{.users[*]}')

                  # Loop through each notebook
                  while read -r nb ns ts user image size; do
                      current_time=$(date -u +%s)
                      timestamp=$(date -d $ts +%s)
                      difference=$((current_time - timestamp))
                      user_in_group1=false
                      user_in_group2=false

                      if [[ " $group_members_1 " =~ " $user " ]]; then
                          echo "$user is in the $GROUP_NAME_1 group."
                          user_in_group1=true
                          cutoff_time=$CUTOFF_TIME_1
                      elif [[ " $group_members_2 " =~ " $user " ]]; then
                          echo "$user is in the $GROUP_NAME_2 group."
                          user_in_group2=true
                          cutoff_time=$CUTOFF_TIME_2
                      fi

                      if $user_in_group1 || $user_in_group2; then
                          if [[ $image != *$IMAGE_NAME* ]]; then
                              echo "$nb is not using $IMAGE_NAME image, deleting the notebook"
                              oc delete notebook $nb -n $ns
                              oc delete pvc $nb -n $ns
                          elif [[ $size != "X Small" ]]; then
                              echo "$nb resource size is not correct, deleting the notebook"
                              oc delete notebook $nb -n $ns
                              oc delete pvc $nb -n $ns
                          elif [ $difference -gt $cutoff_time ]; then
                              echo "$nb is more than $(($cutoff_time / 3600)) hours old, stopping the notebook"
                              oc patch notebook $nb -n $ns --type merge -p '{"metadata":{"annotations":{"kubeflow-resource-stopped":"'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}}}'
                          fi
                      else
                          echo "Skipping $nb: user $user does not belong to any monitored group."
                      fi
                  done <<< "$notebooks"
              env:
              # EDIT VALUE HERE BEFORE RUNNING
              - name: GROUP_NAME_1
                value: <group_1>
              # EDIT VALUE HERE BEFORE RUNNING
              - name: GROUP_NAME_2
                value: <group_2>
              # EDIT VALUE HERE BEFORE RUNNING
              - name: CUTOFF_TIME_1
                value: "21600"
              # EDIT VALUE HERE BEFORE RUNNING
              - name: CUTOFF_TIME_2
                value: "43200"
              # EDIT VALUE HERE BEFORE RUNNING
              - name: IMAGE_NAME
                value: "ucsls-nerc-rhoai"
              resources:
                limits:
                  memory: 800Mi
                requests:
                  memory: 400Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          dnsPolicy: ClusterFirst
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 7
